version: "3.8"

services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      sonarqube:
        condition: service_healthy
    environment:
      DEBUG: ${DEBUG}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SONAR_TOKEN: ${SONAR_TOKEN}
    env_file:
      - .env

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: twomaidsonline
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:5.0.7
    # Puerto no mapeado al host, uso interno solamente

  sonar_db:
    image: postgres:15
    container_name: sonar_db
    environment:
      POSTGRES_DB: sonarqube
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonar_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      sonar_db:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonar_db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9000/api/system/health | grep -q '\"status\":\"UP\"'"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 20s

volumes:
  static_volume:
  postgres_data:
  sonar_postgres_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
